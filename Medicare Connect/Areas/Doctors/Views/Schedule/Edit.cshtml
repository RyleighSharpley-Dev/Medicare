@model Medicare_Connect.Data.Entities.DoctorTimeslot
@{
    ViewData["Title"] = "Edit Timeslot";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-1">Edit Timeslot</h1>
            <p class="text-muted mb-0">Update time, duration, or availability</p>
        </div>
        <a class="btn btn-outline-primary" asp-area="Doctors" asp-controller="Schedule" asp-action="Index">
            <i class="bi bi-arrow-left me-2"></i>Back to Schedule
        </a>
    </div>

    <div class="row g-4">
        <div class="col-lg-6">
            <div class="card dashboard-card border-0">
                <div class="card-body">
                    <form asp-action="Edit" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <div class="mb-3">
                            <label class="form-label">Date</label>
                            <input type="date" class="form-control" name="date" value="@Model.StartTime.ToString("yyyy-MM-dd")" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Start Time</label>
                            <input type="time" class="form-control" name="startTime" value="@Model.StartTime.ToString("HH:mm")" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Duration (minutes)</label>
                            <input type="number" class="form-control" name="durationMinutes" value="@Model.DurationMinutes" min="15" max="480" step="15" required />
                        </div>
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input"
                                   type="checkbox"
                                   id="isAvailable"
                                   name="isAvailable"
                                   value="true"
                                   @(Model.IsAvailable ? "checked" : "") />
                            <label class="form-check-label" for="isAvailable">Available</label>
                        </div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-save me-2"></i>Save Changes
                            </button>
                            <form asp-action="ToggleAvailability" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@Model.Id" />
                                <button class="btn btn-outline-warning" type="submit">
                                    <i class="bi bi-slash-circle me-2"></i>@(Model.IsAvailable ? "Block" : "Unblock")
                                </button>
                            </form>
                            <form asp-action="Delete" method="post" class="d-inline" onsubmit="return confirm('Delete this timeslot?');">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@Model.Id" />
                                <button class="btn btn-outline-danger" type="submit">
                                    <i class="bi bi-trash me-2"></i>Delete
                                </button>
                            </form>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card dashboard-card border-0">
                <div class="card-body">
                    <h5 class="card-title mb-3">Bulk Block</h5>
                    <form asp-action="BlockRange" method="post">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label class="form-label">From</label>
                            <input type="date" class="form-control" name="start" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">To</label>
                            <input type="date" class="form-control" name="end" required />
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-outline-secondary" type="submit">
                                <i class="bi bi-calendar-x me-2"></i>Block Range
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div> 