@model List<Medicare_Connect.Areas.Patients.Models.Appointment>
@{
    Layout = "/Views/Shared/_RoleBasedLayout.cshtml";
    ViewData["Title"] = "Appointments";
    var doctors = ViewData["Doctors"] as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
    var dbAppointments = ViewData["DbAppointments"] as IEnumerable<Medicare_Connect.Data.Entities.AppointmentEntity> ?? Enumerable.Empty<Medicare_Connect.Data.Entities.AppointmentEntity>();
}

@section Sidebar {
    @{
        var currentController = (ViewContext.RouteData.Values["controller"]?.ToString() ?? "").ToLowerInvariant();
    }
    <li class="nav-item">
        <a class="nav-link @(currentController == "dashboard" ? "active" : "")" asp-area="Patients" asp-controller="Dashboard" asp-action="Index">
            <i class="bi bi-speedometer2"></i> Dashboard
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "profile" ? "active" : "")" asp-area="Patients" asp-controller="Profile" asp-action="Index">
            <i class="bi bi-person"></i> Profile
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "appointments" ? "active" : "")" asp-area="Patients" asp-controller="Appointments" asp-action="Index">
            <i class="bi bi-calendar-check"></i> Appointments
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "records" ? "active" : "")" asp-area="Patients" asp-controller="Records" asp-action="Index">
            <i class="bi bi-journal-medical"></i> Records
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "prescriptions" ? "active" : "")" asp-area="Patients" asp-controller="Prescriptions" asp-action="Index">
            <i class="bi bi-prescription2"></i> Prescriptions
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "payments" ? "active" : "")" asp-area="Patients" asp-controller="Payments" asp-action="Index">
            <i class="bi bi-credit-card"></i> Payments
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "billing" ? "active" : "")" asp-area="Patients" asp-controller="Billing" asp-action="Index">
            <i class="bi bi-receipt"></i> Billing
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "reminders" ? "active" : "")" asp-area="Patients" asp-controller="Reminders" asp-action="Index">
            <i class="bi bi-bell"></i> Reminders
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "consultations" ? "active" : "")" asp-area="Patients" asp-controller="Consultations" asp-action="Index">
            <i class="bi bi-journal-text"></i> Consultations
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentController == "settings" ? "active" : "")" asp-area="Patients" asp-controller="Settings" asp-action="Index">
            <i class="bi bi-gear"></i> Settings
        </a>
    </li>
    <li class="nav-item dropdown ms-lg-auto">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
            <i class="bi bi-translate"></i> Language
        </a>
        <ul class="dropdown-menu dropdown-menu-end">
            <li>
                <form method="get" asp-area="Patients" asp-controller="Dashboard" asp-action="Index" class="px-3 py-2">
                    <select class="form-select form-select-sm" name="culture" onchange="this.form.submit();">
                        <option value="en" selected="@(Context.Request.Query["culture"] == "en")">English</option>
                        <option value="zu" selected="@(Context.Request.Query["culture"] == "zu")">isiZulu</option>
                        <option value="st" selected="@(Context.Request.Query["culture"] == "st")">Sesotho</option>
                        <option value="ts" selected="@(Context.Request.Query["culture"] == "ts")">Xitsonga</option>
                    </select>
                </form>
            </li>
        </ul>
    </li>
}

<style>
    :root {
        --primary-color: #2563eb;
        --primary-light: #3b82f6;
        --primary-dark: #1d4ed8;
        --success-color: #059669;
        --warning-color: #d97706;
        --danger-color: #dc2626;
        --info-color: #0891b2;
        --gray-50: #f9fafb;
        --gray-100: #f3f4f6;
        --gray-200: #e5e7eb;
        --gray-300: #d1d5db;
        --gray-400: #9ca3af;
        --gray-500: #6b7280;
        --gray-600: #4b5563;
        --gray-700: #374151;
        --gray-800: #1f2937;
        --gray-900: #111827;
        --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        --border-radius: 12px;
        --border-radius-sm: 8px;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: #ffffff;
        color: var(--gray-700);
        line-height: 1.6;
    }

    .medicare-appointments-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .medicare-appointments-header {
        background: linear-gradient(135deg, #059669 0%, #10b981 100%);
        border-radius: var(--border-radius);
        padding: 2rem;
        margin-bottom: 2rem;
        color: white;
        box-shadow: var(--shadow-lg);
    }

    .appointments-header-content {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        flex-wrap: wrap;
        gap: 1rem;
    }

        .appointments-header-content h1 {
            font-size: 2rem;
            font-weight: 700;
            margin: 0 0 0.5rem 0;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

            .appointments-header-content h1::before {
                content: "üìÖ";
                font-size: 1.75rem;
            }

        .appointments-header-content p {
            color: rgba(255, 255, 255, 0.8);
            margin: 0;
            font-size: 1.125rem;
        }

    .medicare-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        border-radius: var(--border-radius-sm);
        font-weight: 500;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 0.875rem;
        white-space: nowrap;
    }

    .medicare-btn-outline {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

        .medicare-btn-outline:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.5);
            color: white;
            text-decoration: none;
        }

    .medicare-btn-primary {
        background: var(--primary-color);
        color: white;
        border: 1px solid var(--primary-color);
    }

        .medicare-btn-primary:hover {
            background: var(--primary-dark);
            border-color: var(--primary-dark);
            color: white;
            transform: translateY(-1px);
        }

    .medicare-btn-sm {
        padding: 0.5rem 1rem;
        font-size: 0.75rem;
    }

    .medicare-btn-secondary {
        background: var(--gray-100);
        color: var(--gray-700);
        border: 1px solid var(--gray-300);
    }

        .medicare-btn-secondary:hover {
            background: var(--gray-200);
            color: var(--gray-800);
            text-decoration: none;
        }

    .medicare-btn-danger {
        background: white;
        color: var(--danger-color);
        border: 1px solid var(--danger-color);
    }

        .medicare-btn-danger:hover {
            background: var(--danger-color);
            color: white;
        }

    .alert-modern {
        padding: 1rem 1.25rem;
        border-radius: var(--border-radius-sm);
        margin-bottom: 1.5rem;
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
        box-shadow: var(--shadow-sm);
    }

    .alert-success {
        background: #f0fdf4;
        border: 1px solid #bbf7d0;
        color: #166534;
    }

    .alert-danger {
        background: #fef2f2;
        border: 1px solid #fecaca;
        color: #991b1b;
    }

    .medicare-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-lg);
        border: 1px solid var(--gray-200);
        transition: all 0.2s ease;
        overflow: hidden;
    }

        .medicare-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
        }

    .medicare-card-body {
        padding: 1.5rem;
    }

    .booking-card {
        background: var(--gray-50);
        border: 1px solid var(--gray-200);
    }

    .card-title-modern {
        color: var(--gray-800);
        font-size: 1.125rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .booking-title::before {
        content: "üìù";
        font-size: 1.25rem;
    }

    .appointments-title::before {
        content: "üìã";
        font-size: 1.25rem;
    }

    .medicare-form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid var(--gray-300);
        border-radius: var(--border-radius-sm);
        font-size: 0.875rem;
        background: white;
        color: var(--gray-700);
        margin-bottom: 1rem;
    }

        .medicare-form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

    .medicare-form-label {
        display: block;
        font-weight: 500;
        color: var(--gray-700);
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
    }

    .price-display {
        background: var(--gray-100);
        padding: 1rem;
        border-radius: var(--border-radius-sm);
        margin-bottom: 1rem;
        border: 1px solid var(--gray-200);
    }

    .price-display-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .price-value {
        font-weight: 700;
        color: var(--success-color);
        font-size: 1.125rem;
    }

    .medicare-tabs {
        border-bottom: 1px solid var(--gray-200);
        margin-bottom: 1.5rem;
        display: flex;
        gap: 0;
    }

    .medicare-tab {
        background: none;
        border: none;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        color: var(--gray-500);
        cursor: pointer;
        border-bottom: 3px solid transparent;
        transition: all 0.2s ease;
        font-size: 0.875rem;
    }

        .medicare-tab.active {
            color: var(--primary-color);
            border-bottom-color: var(--primary-color);
        }

        .medicare-tab:hover {
            color: var(--gray-700);
            background: var(--gray-50);
        }

    .medicare-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.875rem;
    }

        .medicare-table th {
            background: var(--gray-50);
            padding: 1rem 0.75rem;
            text-align: left;
            font-weight: 600;
            color: var(--gray-700);
            border-bottom: 1px solid var(--gray-200);
        }

        .medicare-table td {
            padding: 1rem 0.75rem;
            border-bottom: 1px solid var(--gray-100);
            vertical-align: middle;
        }

        .medicare-table tr:hover {
            background: var(--gray-50);
        }

    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.025em;
    }

    .badge-primary {
        background: #dbeafe;
        color: #1e40af;
    }

    .badge-success {
        background: #d1fae5;
        color: #065f46;
    }

    .badge-warning {
        background: #fef3c7;
        color: #92400e;
    }

    .badge-secondary {
        background: var(--gray-200);
        color: var(--gray-700);
    }

    .badge-danger {
        background: #fee2e2;
        color: #991b1b;
    }

    .tab-content {
        min-height: 300px;
    }

    .tab-pane {
        display: none;
    }

        .tab-pane.active {
            display: block;
        }

    .appointments-grid {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 2rem;
        margin-bottom: 2rem;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-end;
        flex-wrap: wrap;
    }

    /* Mobile Responsiveness */
    @@media (max-width: 768px) {
        .medicare-appointments-container

    {
        padding: 1rem 0.5rem;
    }

    .medicare-appointments-header {
        padding: 1.5rem;
    }

    .appointments-header-content {
        flex-direction: column;
        align-items: stretch;
    }

        .appointments-header-content h1 {
            font-size: 1.5rem;
        }

    .appointments-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    .medicare-tabs {
        flex-wrap: wrap;
    }

    .medicare-tab {
        flex: 1;
        min-width: 80px;
        padding: 0.75rem 0.5rem;
        text-align: center;
    }

    .action-buttons {
        flex-direction: column;
    }

    .medicare-btn {
        justify-content: center;
        width: 100%;
    }

    .medicare-table th,
    .medicare-table td {
        padding: 0.75rem 0.5rem;
    }

    }

    @@media (max-width: 480px) {
        .appointments-header-content h1::before

    {
        display: none;
    }

    .booking-title::before,
    .appointments-title::before {
        display: none;
    }

    .price-display-row {
        flex-direction: column;
        align-items: stretch;
        gap: 0.5rem;
    }

    }
</style>



<div class="medicare-appointments-container">
    <div class="medicare-appointments-header">
        <div class="appointments-header-content">
            <div>
                <h1>Ama-aphoyintimenti (Appointments)</h1>
                <p>Book, view, and manage your appointments</p>
            </div>
            <div>
                <a class="medicare-btn medicare-btn-outline" asp-area="Patients" asp-controller="Dashboard" asp-action="Index">
                    <i class="bi bi-arrow-left"></i>Back to Dashboard
                </a>
            </div>
        </div>
    </div>

    @if (TempData["ApptSuccess"] != null)
    {
        <div class="alert-modern alert-success">
            <i class="bi bi-check-circle"></i>
            <div>
                @TempData["ApptSuccess"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" style="float: right; background: none; border: none; font-size: 1.2rem; cursor: pointer;">&times;</button>
            </div>
        </div>
    }
    @if (TempData["ApptError"] != null)
    {
        <div class="alert-modern alert-danger">
            <i class="bi bi-exclamation-triangle"></i>
            <div>
                @TempData["ApptError"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" style="float: right; background: none; border: none; font-size: 1.2rem; cursor: pointer;">&times;</button>
            </div>
        </div>
    }

    <div class="appointments-grid">
        <!-- Booking Form -->
        <div class="medicare-card booking-card">
            <div class="medicare-card-body">
                <h5 class="card-title-modern booking-title">Book Appointment</h5>
                <form asp-action="BookSlot" method="post">
                    @Html.AntiForgeryToken()
                    <div>
                        <label class="medicare-form-label">Doctor</label>
                        <select class="medicare-form-control" name="doctorId" id="doctorSelect" required>
                            <option value="">Select doctor</option>
                            @foreach (var d in doctors)
                            {
                                <option value="@d.Id">@d.Name</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label class="medicare-form-label">Date</label>
                        <input class="medicare-form-control" type="date" id="dateSelect" required />
                    </div>
                    <div>
                        <label class="medicare-form-label">Available Timeslots</label>
                        <select class="medicare-form-control" name="timeslotId" id="timeslotSelect" required>
                            <option value="">Select a timeslot</option>
                        </select>
                    </div>
                    <div>
                        <label class="medicare-form-label">Appointment Type</label>
                        <select class="medicare-form-control" name="appointmentType" id="appointmentType" required>
                            <option value="">Select type</option>
                            <option>General Checkup</option>
                            <option>Follow-up</option>
                            <option>Lab Results</option>
                            <option>Vaccination</option>
                        </select>
                    </div>
                    <div>
                        <label class="medicare-form-label">Notes (optional)</label>
                        <textarea class="medicare-form-control" name="notes" rows="2" placeholder="Reason for visit" style="resize: vertical; min-height: 80px;"></textarea>
                    </div>
                    <div class="price-display">
                        <div class="price-display-row">
                            <span class="medicare-form-label" style="margin: 0;">Estimated Price</span>
                            <strong class="price-value" id="priceDisplay">‚Äî</strong>
                        </div>
                        <small style="color: var(--gray-500); font-size: 0.75rem;">Prices are estimated and charged at checkout.</small>
                    </div>
                    <div style="margin-top: 1.5rem;">
                        <button class="medicare-btn medicare-btn-primary" type="submit" style="width: 100%; justify-content: center;">
                            <i class="bi bi-plus-circle"></i>Book Appointment
                        </button>
                    </div>
                    <input type="hidden" name="doctorIdHidden" id="doctorIdHidden" />
                </form>
            </div>
        </div>

        <!-- Appointments List -->
        <div class="medicare-card">
            <div class="medicare-card-body">
                <h5 class="card-title-modern appointments-title">Your Appointments</h5>

                <div class="medicare-tabs">
                    <button class="medicare-tab active" onclick="showTab('upcoming')">Upcoming</button>
                    <button class="medicare-tab" onclick="showTab('booked')">Booked</button>
                    <button class="medicare-tab" onclick="showTab('history')">History</button>
                </div>

                <!-- Upcoming Tab -->
                <div class="tab-pane active" id="upcoming">
                    <div style="overflow-x: auto;">
                        <table class="medicare-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Type</th>
                                    <th>Doctor</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var a in Model.Where(x => x.AppointmentDate >= DateTime.Now).OrderBy(x => x.AppointmentDate))
                                {
                                    <tr>
                                        <td>@a.AppointmentDate.ToString("ddd, dd MMM yyyy HH:mm")</td>
                                        <td>@a.AppointmentType</td>
                                        <td>@a.DoctorName</td>
                                        <td>
                                            @if (a.Status == Medicare_Connect.Areas.Patients.Models.AppointmentStatus.Booked)
                                            {
                                                <span class="status-badge badge-primary">Booked</span>
                                            }
                                            else if (a.Status == Medicare_Connect.Areas.Patients.Models.AppointmentStatus.Cancelled)
                                            {
                                                <span class="status-badge badge-secondary">Cancelled</span>
                                            }
                                            else
                                            {
                                                <span class="status-badge badge-success">Completed</span>
                                            }
                                        </td>
                                        <td>
                                            @if (a.Status == Medicare_Connect.Areas.Patients.Models.AppointmentStatus.Booked)
                                            {
                                                <div class="action-buttons">
                                                    <a class="medicare-btn medicare-btn-sm medicare-btn-secondary" asp-action="Edit" asp-route-id="@a.Id">
                                                        <i class="bi bi-pencil-square"></i>Reschedule
                                                    </a>
                                                    <form asp-action="Cancel" method="post" style="display: inline;">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@a.Id" />
                                                        <button class="medicare-btn medicare-btn-sm medicare-btn-danger" type="submit">
                                                            <i class="bi bi-x-circle"></i>Cancel
                                                        </button>
                                                    </form>
                                                </div>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Booked Tab -->
                <div class="tab-pane" id="booked">
                    <div style="overflow-x: auto;">
                        <table class="medicare-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Type</th>
                                    <th>Status</th>
                                    <th>Payment</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var a in dbAppointments)
                                {
                                    <tr>
                                        <td>@(a.AppointmentDate.Add(a.StartTime).ToString("ddd, dd MMM yyyy HH:mm"))</td>
                                        <td>@a.AppointmentType</td>
                                        <td><span class="status-badge badge-primary">@a.Status</span></td>
                                        <td>
                                            @if (a.PaymentStatus == "Completed")
                                            {
                                                <span class="status-badge badge-success">Paid</span>
                                            }
                                            else
                                            {
                                                <span class="status-badge badge-warning">@a.PaymentStatus</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- History Tab -->
                <div class="tab-pane" id="history">
                    <div style="overflow-x: auto;">
                        <table class="medicare-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Type</th>
                                    <th>Doctor</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var a in Model.Where(x => x.AppointmentDate < DateTime.Now).OrderByDescending(x => x.AppointmentDate))
                                {
                                    <tr>
                                        <td>@a.AppointmentDate.ToString("ddd, dd MMM yyyy HH:mm")</td>
                                        <td>@a.AppointmentType</td>
                                        <td>@a.DoctorName</td>
                                        <td>
                                            @if (a.Status == Medicare_Connect.Areas.Patients.Models.AppointmentStatus.Completed)
                                            {
                                                <span class="status-badge badge-success">Completed</span>
                                            }
                                            else if (a.Status == Medicare_Connect.Areas.Patients.Models.AppointmentStatus.Cancelled)
                                            {
                                                <span class="status-badge badge-secondary">Cancelled</span>
                                            }
                                            else
                                            {
                                                <span class="status-badge badge-primary">Booked</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Tab functionality
        function showTab(tabName) {
            // Hide all tab panes
            document.querySelectorAll('.tab-pane').forEach(pane => {
                pane.classList.remove('active');
            });

            // Remove active class from all tabs
            document.querySelectorAll('.medicare-tab').forEach(tab => {
                tab.classList.remove('active');
            });

            // Show selected tab pane
            document.getElementById(tabName).classList.add('active');

            // Add active class to clicked tab
            event.target.classList.add('active');
        }

        // Original appointment booking functionality
        (function () {
            const prices = {
                'General Checkup': 500.00,
                'Follow-up': 300.00,
                'Lab Results': 200.00,
                'Vaccination': 400.00
            };
            const currency = 'ZAR';
            const select = document.getElementById('appointmentType');
            const priceDisplay = document.getElementById('priceDisplay');
            const doctorSelect = document.getElementById('doctorSelect');
            const dateSelect = document.getElementById('dateSelect');
            const timeslotSelect = document.getElementById('timeslotSelect');

            function updatePrice() {
                const type = select.value;
                priceDisplay.textContent = type && prices[type] ? new Intl.NumberFormat('en-ZA', { style: 'currency', currency }).format(prices[type]) : '‚Äî';
            }

            async function loadTimeslots() {
                timeslotSelect.innerHTML = '<option value="">Loading...</option>';
                const doctorId = doctorSelect.value;
                const date = dateSelect.value;
                if (!doctorId || !date) {
                    timeslotSelect.innerHTML = '<option value="">Select a timeslot</option>';
                    return;
                }
                try {
                    const res = await fetch(`@Url.Action("AvailableTimeslots", "Appointments", new { area = "Patients" })?doctorId=${encodeURIComponent(doctorId)}&date=${encodeURIComponent(date)}`);
                    const data = await res.json();
                    timeslotSelect.innerHTML = '<option value="">Select a timeslot</option>';
                    if (!Array.isArray(data) || !data.length) {
                        timeslotSelect.innerHTML = '<option value="">No slots available</option>';
                        return;
                    }
                    for (const s of data) {
                        const opt = document.createElement('option');
                        opt.value = s.id;
                        opt.textContent = s.label;
                        timeslotSelect.appendChild(opt);
                    }
                } catch {
                    timeslotSelect.innerHTML = '<option value="">Failed to load</option>';
                }
            }

            select.addEventListener('change', updatePrice);
            doctorSelect.addEventListener('change', loadTimeslots);
            dateSelect.addEventListener('change', loadTimeslots);
            updatePrice();
        })();
    </script>
}