@model Medicare_Connect.Areas.AdministrativeStaff.Models.BillingViewModel
@{
    ViewData["Title"] = "Billing Details";
    
    // Safety check for required ViewBag values
    if (ViewBag.BillingId == null)
    {
        <div class="alert alert-danger">
            <strong>Error:</strong> Billing record not found or invalid.
            <a href="@Url.Action("Index")" class="btn btn-outline-danger btn-sm ms-2">Return to Billing</a>
        </div>
        return;
    }
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Billing Details</h2>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Edit", new { id = ViewBag.BillingId })" class="btn btn-warning">
                        <i class="bi bi-pencil"></i> Edit Bill
                    </a>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Billing
                    </a>
                </div>
            </div>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle"></i> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Billing Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Patient:</label>
                                    <p class="form-control-plaintext">@ViewBag.PatientName</p>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Service Type:</label>
                                    <p class="form-control-plaintext">
                                        <span class="badge bg-info">@Model.ServiceType</span>
                                    </p>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Service Date:</label>
                                    <p class="form-control-plaintext">@Model.ServiceDate.ToString("dddd, MMMM dd, yyyy")</p>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Due Date:</label>
                                    <p class="form-control-plaintext @(ViewBag.IsOverdue ? "text-danger fw-bold" : "")">
                                        @Model.DueDate.ToString("dddd, MMMM dd, yyyy")
                                        @if (ViewBag.IsOverdue)
                                        {
                                            <span class="badge bg-danger ms-2">OVERDUE</span>
                                        }
                                    </p>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <label class="form-label fw-bold">Total Amount:</label>
                                    <p class="form-control-plaintext text-success fw-bold fs-5">
                                        @Model.Amount.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-ZA"))
                                    </p>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label fw-bold">Insurance Coverage:</label>
                                    <p class="form-control-plaintext">
                                        @if (Model.InsuranceCoverage && Model.InsuranceAmount.HasValue)
                                        {
                                            <span class="text-info">@Model.InsuranceAmount.Value.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-ZA"))</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">None</span>
                                        }
                                    </p>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label fw-bold">Patient Responsibility:</label>
                                    <p class="form-control-plaintext text-warning fw-bold fs-5">
                                        @Model.PatientResponsibility.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-ZA"))
                                    </p>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Payment Status:</label>
                                    <p class="form-control-plaintext">
                                        @if (Model.PaymentStatus == "Paid")
                                        {
                                            <span class="badge bg-success fs-6">@Model.PaymentStatus</span>
                                        }
                                        else if (Model.PaymentStatus == "Overdue")
                                        {
                                            <span class="badge bg-danger fs-6">@Model.PaymentStatus</span>
                                        }
                                        else if (Model.PaymentStatus == "Pending")
                                        {
                                            <span class="badge bg-warning fs-6">@Model.PaymentStatus</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary fs-6">@Model.PaymentStatus</span>
                                        }
                                    </p>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Billing ID:</label>
                                    <p class="form-control-plaintext">
                                        <code>@ViewBag.BillingId</code>
                                    </p>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.Notes))
                            {
                                <div class="row mb-3">
                                    <div class="col-12">
                                        <label class="form-label fw-bold">Notes:</label>
                                        <p class="form-control-plaintext">@Model.Notes</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="mb-0">Quick Actions</h6>
                        </div>
                        <div class="card-body">
                            <div class="d-grid gap-2">
                                <button class="btn btn-outline-success" onclick="updatePaymentStatus('Paid')">
                                    <i class="bi bi-check-circle"></i> Mark as Paid
                                </button>
                                <button class="btn btn-outline-warning" onclick="updatePaymentStatus('Pending')">
                                    <i class="bi bi-clock"></i> Mark as Pending
                                </button>
                                <button class="btn btn-outline-info" onclick="updatePaymentStatus('Partial')">
                                    <i class="bi bi-arrow-repeat"></i> Mark as Partial
                                </button>
                                <button class="btn btn-outline-danger" onclick="updatePaymentStatus('Overdue')">
                                    <i class="bi bi-exclamation-triangle"></i> Mark as Overdue
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="card mt-3">
                        <div class="card-header">
                            <h6 class="mb-0">System Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                <small class="text-muted">Created:</small><br>
                                <span>@(ViewBag.CreatedAt != null ? ((DateTime)ViewBag.CreatedAt).ToString("MMM dd, yyyy HH:mm") : "Not available")</span>
                            </div>
                            @if (ViewBag.UpdatedAt != null)
                            {
                                <div class="mb-2">
                                    <small class="text-muted">Last Updated:</small><br>
                                    <span>@(((DateTime)ViewBag.UpdatedAt).ToString("MMM dd, yyyy HH:mm"))</span>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updatePaymentStatus(newStatus) {
            const billingId = '@(ViewBag.BillingId ?? "")';
            if (!billingId) {
                alert('Billing ID not available. Please refresh the page.');
                return;
            }
            
            if (confirm(`Are you sure you want to mark this bill as "${newStatus}"?`)) {
                fetch('@Url.Action("UpdatePaymentStatus")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: `id=${encodeURIComponent(billingId)}&newStatus=${encodeURIComponent(newStatus)}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating the payment status.');
                });
            }
        }
    </script>
} 